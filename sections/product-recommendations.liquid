{%- liquid
    assign isRtl = false
    assign lisRtl = 'ar,dv,ha,he,ku,fa,ur,ug' | split: ','
    if lisRtl contains request.locale.iso_code or settings.rtl
        assign isRtl = true
    endif
   
   assign secSt = section.settings

   if request.page_type == "cart"
      for item in cart.items
          assign product_rec = item.product
      endfor
  else
      assign product_rec = product
  endif
-%}
<product-recommendations class="complementary-products" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{product_rec.id}}&limit={{section.settings.limit}}">
    <div class="page-width{% if secSt.section_width %} fullwidth{% endif %} recommended">
        {% render 'sec-title' %}
        <div id="productSlider-{{ section.id }}" class="grid recomPr rwcols-{{secSt.mobile-grid}} rwcols-md-{{secSt.tablet-grid}} rwcols-lg-{{secSt.grid}} grid-products{% if secSt.enable_carousel %} carousel arwOut{% endif %}" style="{{navstl}}"
             {% if secSt.enable_carousel %}data-flickity='{ "cellAlign":"left","groupCells":true,"wrapAround":true,"pageDots":false,"draggable":true{%- if secSt.autoplay -%},"autoPlay":{{secSt.speed | times: 1000}}{% endif %}{%- if settings.rtl -%},"rightToLeft": true{%- endif -%} }'{% endif %}>
            {% for recommendation in recommendations.products %}
                <div class="gitem">{% render 'product-card-grid', product: recommendation, block: block.settings, section: section.settings, sizes: image_size %}</div>
            {%- endfor -%}
        </div>
    </div>
</product-recommendations>
<script>
class ProductRecommendations extends HTMLElement {
  constructor(){super();}
  connectedCallback() {
    const handleIntersection = (entries, observer) => {
      if(!entries[0].isIntersecting) return;
      observer.unobserve(this);

      fetch(this.dataset.url).then(response => response.text()).then(text => {
          const html = document.createElement('div');
          html.innerHTML = text;
          const recommendations = html.querySelector('product-recommendations');
          if(recommendations && recommendations.innerHTML.trim().length) {
            this.innerHTML = recommendations.innerHTML;
          }
          if(html.querySelector('.gitem')){
            this.classList.add('product-recommendations--loaded');
            {% if secSt.enable_carousel %}
                var option = $('#productSlider-{{ section.id }}').attr("data-flickity") || '{}';
                var flkty = new Flickity('#productSlider-{{ section.id }}',JSON.parse(option));
             {% endif %}
            theme.countdown();shopreviews();
          }
        })
        .catch(e => {
          console.error(e);
        });
    }
    new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 400px 0px'}).observe(this);
  }
}
customElements.define('product-recommendations', ProductRecommendations);
</script>
{% schema %}
  {
    "name": "t:sections.recommended_products.name",
	"class": "content-indent default",
    "settings": [
     {
        "id": "title",
        "type": "text",
        "label": "t:sections.all.head",
        "default": "Recommended Products"
      },
 	  {
        "id": "subtitle",
        "type": "text",
        "label": "t:sections.all.sub_head"       
      }, 	  
      {
		"type":"checkbox",
		"id":"section_width",
		"label":"t:global.fullwidth",
		"default": false
	   },
	  {
        "type": "paragraph",
        "content": "t:sections.all.products_per_row"
      },
      {
        "type": "range",
        "id": "grid",
        "label": "t:global.devices.desktop",
        "default": 4,
        "min": 2,
        "max": 7,
        "step": 1
      },
      {
        "type": "range",
        "id": "tablet-grid",
        "label": "t:global.devices.tablet",
        "default": 3,
        "min": 2,
        "max": 5,
        "step": 1
      },
      {
        "type": "range",
        "id": "mobile-grid",
        "label": "t:global.devices.mobile",
        "default": 2,
        "min": 1,
        "max": 3,
        "step": 1
      },
      {
        "type": "text",
        "id": "limit",
        "label": "t:sections.all.number_of_product",
        "default": "5"        
      },
	  {
        "type": "header",
        "content": "t:sections.all.carousel.name"
      },
 	 {
		"type":"checkbox",
		"id":"enable_carousel",
		"label":"t:global.enable",
		"default": true
	  },       	 	    
	  {
        "type": "checkbox",
        "id": "autoplay",
        "label": "t:sections.all.carousel.autoplay",
        "default": false
      },
      {
        "type": "range",
        "id": "speed",
        "label": "t:sections.all.carousel.speed",
        "default": 5,
        "min": 1,
        "max": 30,
        "step": 1,
		"unit": "Sec"
      }
	]
}
{% endschema %}