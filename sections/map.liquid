<script>
  {% if section.settings.api_key %}
      theme.mapKey = {{ section.settings.api_key | json }};
    {% endif %}
  theme.strings.addressError = {{ 'sections.map.address_error' | t | json }};
  theme.strings.addressNoResults = {{ 'sections.map.address_no_results' | t | json }};
  theme.strings.addressQueryLimit = {{ 'sections.map.address_query_limit_html' | t | json }};
  theme.strings.authError = {{ 'sections.map.auth_error_html' | t | json }};
</script>
<div class="content-indent {{ section.settings.top-offeset}}{% if section.settings.hide_mobile %} hide-sm{% endif %}{% if section.settings.hided %} hide-md hide-lg{% endif %}">
  <div class="map-section" data-section-id="{{ section.id }}" data-section-type="map">
    {% if section.settings.title != blank or section.settings.address != blank %}
    <div class="home-map {% if section.settings.fullwidth %}fullwidth{% else %}page-width{% endif %}">
      <div class="map-section__overlay-wrapper">
        <div class="map-section__overlay">
          
          {% if section.settings.map_title != blank %}
          <h3 class="h4">{{ section.settings.map_title | escape }}</h3>
          {% endif %}
          
          {% if section.settings.address != blank %}
            <div class="rte-setting">{{ section.settings.address }}</div>
            
          	{% if section.settings.show_button %}
            <p><a href="https://maps.google.com?daddr={{ section.settings.map_address | escape }}" class="btn btn2 btn-sm" target="_blank">{{ 'sections.map.get_directions' | t }}</a></p>
            {% endif %}
          
          {% endif %}
        </div>
      </div>
    </div>
    {% endif %}
    <a class="map-section__link" href="https://www.google.ca/maps/place/{{ section.settings.map_address | escape }}" target="_blank" aria-label="{{ section.settings.map_address | escape }}"></a>
    <div class="map-section__container" id="Map-{{ section.id }}" data-address-setting="{{ section.settings.map_address | escape }}"></div>
  </div>
</div>
<script>
window.addEventListener('DOMContentLoaded',function(){
    theme.Maps = (function(){
  var config = {
    zoom: 14
  };
  var apiStatus = null;
  var mapsToLoad = [];
  var key = theme.mapKey ? theme.mapKey : '';

  function Map(container) {
    this.$container = $(container);

    if(apiStatus === 'loaded') {
      this.createMap();
    } else {
      mapsToLoad.push(this);

      if(apiStatus !== 'loading') {
        apiStatus = 'loading';
        if(typeof window.google === 'undefined') {
          $.getScript('https://maps.googleapis.com/maps/api/js?key=' + key)
            .then(function(){
              apiStatus = 'loaded';
              initAllMaps();
            });
        }
      }
    }
  }
  function initAllMaps() {
    $.each(mapsToLoad, function(index, instance) {
      instance.createMap();
    });
  }
  function geolocate($map) {
    var deferred = $.Deferred();
    var geocoder = new google.maps.Geocoder();
    var address = $map.data('address-setting');
    geocoder.geocode({address: address}, function(results, status) {
      if(status !== google.maps.GeocoderStatus.OK) {
        deferred.reject(status);
      }
      deferred.resolve(results);
    });
    return deferred;
  }

  Map.prototype = _.assignIn({}, Map.prototype, {
    createMap: function(){
      var $map = this.$container.find('.map-section__container');
      return geolocate($map)
        .then(function(results) {
          var mapOptions = {
            zoom: config.zoom,
            center: results[0].geometry.location,
            disableDefaultUI: true
          };
          var map = this.map = new google.maps.Map($map[0], mapOptions);
          var center = this.center = map.getCenter();
          //eslint-disable-next-line no-unused-vars
          var marker = new google.maps.Marker({
            map: map,
            position: map.getCenter()
          });
          google.maps.event.addDomListener(window, 'resize');
        }.bind(this)).fail(function(){
          var errorMessage;
          switch (status) {
            case 'ZERO_RESULTS':
              errorMessage = theme.strings.addressNoResults;
              break;
            case 'OVER_QUERY_LIMIT':
              errorMessage = theme.strings.addressQueryLimit;
              break;
            default:
              errorMessage = theme.strings.addressError;
              break;
          }
          $map.parent().addClass('page-width map-section--load-error').html('<div class="errors tc">' + errorMessage + '</div>');
        });
    },
    onUnload: function(){ google.maps.event.clearListeners(this.map, 'resize'); }
  });
  return Map;
})();
function gm_authFailure() {
  $('.map-section').addClass('map-section--load-error');
  $('.map-section__container').remove();
  $('.map-section__link').remove();
  $('.map-section__overlay').after('<div class="errors tc">' + theme.strings.authError + '</div>');
}
});
</script>
{% schema %}
  {
    "name": "t:sections.map.name",
    "class": "map-sec",
    "settings": [	
	  {
            "type": "select",
            "id": "top-offeset",
            "label": "t:sections.all.top_offSet",
            "default": "default",
            "options": [
              {
                "value": "default",
                "label": "Default"
              },
              {
                "value": "small",
                "label": "Small"
              },
			  {
                "value": "none",
                "label": "None"
              }
			]
        },
      {
         "type": "checkbox",
		 "id": "fullwidth",
		 "label":"t:global.fullwidth",
		 "default": true
        },	
      {
            "type": "checkbox",
            "id": "hide_mobile",
            "label": "t:global.devices.mobile_hide",
            "default": false
        },
       {
            "type": "checkbox",
            "id": "hided",
            "label":"t:global.devices.desktop_hide",
            "default": false
        },
      {
        "id": "map_title",
        "type": "text",
        "label": "t:global.text.title",
        "default": "Our store"
      },
      {
        "id": "address",
        "type": "richtext",
        "label": "t:sections.map.address",
        "default": "<p>123 Fake St.<br>Toronto, Canada</p><p>Mon - Fri, 10am - 9pm<br>Saturday, 11am - 9pm<br>Sunday, 11am - 5pm</p>"
      },
      {
        "id": "map_address",
        "type": "text",
        "label": "t:sections.map.map_address",
        "info": "t:sections.map.map_address_info",
        "default": "80 Spadina Ave, Toronto"
      },
      {
        "id": "api_key",
        "type": "text",
        "label": "t:sections.map.api_key",
         "info": "t:sections.map.api_key_info"
       },
      {
        "id": "show_button",
        "type": "checkbox",
        "label": "t:sections.map.show_directions_button",
        "default": true
      }
    ],
    "presets": [
      {
        "name": "t:sections.map.name"         
      }
    ]
  }
{% endschema %}
